{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/forget-password/forget-password.component.ts","webpack:///src/app/components/forget-password/forget-password.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/layout/footer/footer.component.ts","webpack:///src/app/components/layout/footer/footer.component.html","webpack:///src/app/components/layout/header/header.component.ts","webpack:///src/app/components/layout/header/header.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/components/reset-password/reset-password.component.ts","webpack:///src/app/components/reset-password/reset-password.component.html","webpack:///src/app/components/shopping-lists/add-shopping-list/add-shopping-list.component.ts","webpack:///src/app/components/shopping-lists/add-shopping-list/add-shopping-list.component.html","webpack:///src/app/components/shopping-lists/shopping-list/shopping-list.component.ts","webpack:///src/app/components/shopping-lists/shopping-list/shopping-list.component.html","webpack:///src/app/components/shopping-lists/shopping-lists.component.ts","webpack:///src/app/components/shopping-lists/shopping-lists.component.html","webpack:///src/app/components/user/user.component.ts","webpack:///src/app/components/user/user.component.html","webpack:///src/app/components/verify-email/verify-email.component.ts","webpack:///src/app/components/verify-email/verify-email.component.html","webpack:///src/app/configurations/index.ts","webpack:///src/app/guards/authenticated.guard.ts","webpack:///src/app/guards/unauthenticated.guard.ts","webpack:///src/app/services/shopping-list.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","timeOut","positionClass","declarations","providers","bootstrap","ForgetPasswordComponent","onSubmit","HomeComponent","spinner","_userService","userId","getId","show","setTimeout","hide","FooterComponent","HeaderComponent","signOut","changeDetection","OnPush","LoginComponent","_router","toastr","email","error","test","password","length","user","signIn","subscribe","resp","saveUser","data","token","success","window","location","href","err","msg","modalRef","ProfileComponent","modalService","datePipe","typeVolunteer","typeOwner","loaded","getProfile","res","birthdate","transform","template","name","firstName","lastName","gender","updatedUser","address","floor","undefined","apartmentNumber","buildingNumber","streetName","district","city","country","updateUser","oldPassword","newPassword","confirmNewPassword","passwordObj","updatePasswod","RegisterComponent","signUp","navigate","ResetPasswordComponent","AddShoppingListComponent","faTrash","faPlus","addShoppingList","initForm","shoppingList","notes","items","itemName","quantity","get","push","index","removeAt","i","value","element","emit","openModal","ShoppingListComponent","deleteShoppingList","buyShoppingList","unBuyShoppingList","faShoppingCart","faEraser","ShoppingListsComponent","_shoppingListService","event","currentPage","page","startItem","itemsPerPage","endItem","currentShoppingLists","shoppingLists","slice","getAll","type","getOwner","updateSubArray","getVolunteer","filter","sl","_id","create","unshift","buy","unBuy","splice","UserComponent","route","snapshot","paramMap","getUser","VerifyEmailComponent","emailVerificationToken","verifyEmail","URL","AUTH_TOKEN","USER_ID","AuthenticatedGuard","next","state","isLoggedIn","providedIn","UnauthenticatedGuard","ShoppingListService","http","createObj","httpOptions","headers","Authorization","localStorage","getItem","post","UserService","itemValue","signUpObj","signInObj","removeItem","setItem","verifyEmailObj","forgetPasswordObj","resetPasswordObj","updatePasswordObj","patch","updateUserObj","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { ForgetPasswordComponent } from './components/forget-password/forget-password.component';\r\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\r\nimport { VerifyEmailComponent } from './components/verify-email/verify-email.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { UserComponent } from './components/user/user.component';\r\n\r\nimport { AuthenticatedGuard } from './guards/authenticated.guard';\r\n\r\nimport { UnauthenticatedGuard } from './guards/unauthenticated.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n    canActivate: [AuthenticatedGuard],\r\n  },\r\n  {\r\n    path: 'profile',\r\n    component: ProfileComponent,\r\n    canActivate: [AuthenticatedGuard],\r\n  },\r\n  {\r\n    path: 'profile/:id',\r\n    component: UserComponent,\r\n    canActivate: [AuthenticatedGuard],\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n    canActivate: [UnauthenticatedGuard],\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent,\r\n    canActivate: [UnauthenticatedGuard],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'help-elder-shopping-list';\r\n}\r\n","<app-header></app-header>\r\n<div class=\"container mt-5 mb-5\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n<app-footer></app-footer>\r\n<ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"medium\" color=\"#fff\" type=\"line-scale-pulse-out\" [fullScreen]=\"true\">\r\n  <p style=\"color: white\"> Loading... </p>\r\n</ngx-spinner>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ShoppingListsComponent } from './components/shopping-lists/shopping-lists.component';\r\nimport { ShoppingListComponent } from './components/shopping-lists/shopping-list/shopping-list.component';\r\nimport { HeaderComponent } from './components/layout/header/header.component';\r\nimport { FooterComponent } from './components/layout/footer/footer.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { ForgetPasswordComponent } from './components/forget-password/forget-password.component';\r\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\r\nimport { VerifyEmailComponent } from './components/verify-email/verify-email.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { UserComponent } from './components/user/user.component';\r\nimport { AddShoppingListComponent } from './components/shopping-lists/add-shopping-list/add-shopping-list.component';\r\nimport { UserService } from './services/user.service';\r\nimport { ShoppingListService } from './services/shopping-list.service';\r\nimport { AuthenticatedGuard } from './guards/authenticated.guard';\r\nimport { UnauthenticatedGuard } from './guards/unauthenticated.guard';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { NgxNavbarModule } from 'ngx-bootstrap-navbar';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ShoppingListsComponent,\r\n    ShoppingListComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    ForgetPasswordComponent,\r\n    ResetPasswordComponent,\r\n    VerifyEmailComponent,\r\n    ProfileComponent,\r\n    UserComponent,\r\n    AddShoppingListComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    PaginationModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FontAwesomeModule,\r\n    NgxNavbarModule,\r\n    TabsModule.forRoot(),\r\n    NgxSpinnerModule,\r\n    ToastrModule.forRoot({\r\n      timeOut: 5000,\r\n      positionClass: 'toast-bottom-right',\r\n    }),\r\n  ],\r\n  providers: [\r\n    UserService,\r\n    ShoppingListService,\r\n    AuthenticatedGuard,\r\n    UnauthenticatedGuard,\r\n    DatePipe,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forget-password',\r\n  templateUrl: './forget-password.component.html',\r\n  styleUrls: ['./forget-password.component.css']\r\n})\r\nexport class ForgetPasswordComponent implements OnInit {\r\n  \r\n  email: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit() {\r\n  }\r\n\r\n}\r\n","<div class=\"container m-auto\" style=\"width: 45%;\">\r\n  <form (submit)=\"onSubmit()\">\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col-md-12\">\r\n        <label for=\"inputEmail\">Email</label>\r\n        <input type=\"email\" class=\"form-control\" id=\"inputEmail\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"Email\">\r\n      </div>\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary\">Forget Password</button>\r\n\r\n  </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { UserService } from '../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private _userService: UserService\r\n  ) {}\r\n\r\n  typeAll: 'typeAll';\r\n  typeNotAssigned: 'typeNotAssigned';\r\n  userId: string;\r\n\r\n  ngOnInit(): void {\r\n    this.userId = this._userService.getId();\r\n    this.spinner.show();\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1000);\r\n  }\r\n}\r\n","<div class=\"m-5\">\r\n    <app-shopping-lists></app-shopping-lists>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- <nav class=\"navbar fixed-bottom navbar-expand-sm navbar-dark bg-dark\">\r\n    <div class=\"row text-white\">\r\n        <div class=\"col-12\">\r\n            <p class=\"mt-2 mb-2 ml-auto mr-auto\"> </p>\r\n        </div>\r\n    </div>\r\n</nav> -->\r\n\r\n<footer class=\"footer bg-dark\">\r\n    <div class=\"container pt-3 pb-3\">\r\n        <span class=\"text-white mt-5 mb-5\">© Mahmoud Saleh 2020 All Rights Reserved.</span>\r\n    </div>\r\n</footer>","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { UserService } from '../../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  constructor(public _userService: UserService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  isUserLoggedin: boolean;\r\n\r\n  onLogOutClicked(): void {\r\n    this._userService.signOut();\r\n  }\r\n}\r\n","<nav ngxNavbarDynamicExpand class=\"navbar navbar-dark bg-dark\">\r\n  <a class=\"navbar-brand\" [routerLink]=\"['/']\">Helping Elders</a>\r\n\r\n  <button class=\"navbar-toggler\" type=\"button\" (click)=\"collapse.toggle()\" aria-controls=\"main-nav\"\r\n    aria-expanded=\"false\" aria-label=\"Navigáció kapcsoló\">\r\n    <span class=\"navbar-toggler-icon d-flex align-items-center justify-content-center\">\r\n    </span>\r\n  </button>\r\n  <ngx-navbar-collapse id=\"main-nav\" #collapse=\"ngxNavbarCollapse\">\r\n    <ul class=\"navbar-nav mr-auto\" *ngIf=\"_userService.isLoggedIn()\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/']\" [routerLinkActive]=\"['active']\"\r\n          [routerLinkActiveOptions]=\"{exact: true}\">Home<span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/profile']\" [routerLinkActive]=\"['active']\">Profile</a>\r\n      </li>\r\n    </ul>\r\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"_userService.isLoggedIn()\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" (click)=\"onLogOutClicked()\" [routerLink]=\"['/']\" [routerLinkActive]=\"['active']\">LogOut</a>\r\n      </li>\r\n    </ul>\r\n    <ul class=\"navbar-nav mr-auto\" *ngIf=\"!_userService.isLoggedIn()\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/login']\" [routerLinkActive]=\"['active']\">SignIn<span\r\n            class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/register']\" [routerLinkActive]=\"['active']\">SignUp</a>\r\n      </li>\r\n    </ul>\r\n  </ngx-navbar-collapse>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../../services/user.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  email: string;\r\n  password: string;\r\n\r\n  constructor(\r\n    private _userService: UserService,\r\n    private _router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onSubmit() {\r\n    if (!this.email) {\r\n      this.toastr.error(\"Email can't be empty\");\r\n      return false;\r\n    }\r\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.email)) {\r\n      this.toastr.error('Please write correct email');\r\n      return false;\r\n    }\r\n    if (!this.password) {\r\n      this.toastr.error(\"Password can't be empty\");\r\n      return false;\r\n    }\r\n    if (this.password.length < 8) {\r\n      this.toastr.error(\"Password can't be less than 8 char\");\r\n      return false;\r\n    }\r\n\r\n    const user = {\r\n      email: this.email,\r\n      password: this.password,\r\n    };\r\n\r\n    this._userService.signIn(user).subscribe(\r\n      (resp) => {\r\n        this._userService.saveUser(resp.data.token, resp.data.id);\r\n        this.toastr.success('User logged in successfully');\r\n        window.location.href = '/';\r\n      },\r\n      (err) => {\r\n        this.toastr.error(err.error.msg);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container m-auto\" style=\"width: 45%;\">\r\n    <form (submit)=\"onSubmit()\">\r\n        <div class=\"form-row\">\r\n            <div class=\"form-group col-md-12\">\r\n                <label for=\"inputEmail\">Email</label>\r\n                <input type=\"email\" class=\"form-control\" id=\"inputEmail\" [(ngModel)]=\"email\" name=\"email\"\r\n                    placeholder=\"Email\">\r\n            </div>\r\n        </div>\r\n        <div class=\"form-row\">\r\n            <div class=\"form-group col-md-12\">\r\n                <label for=\"inputPassword\">Password</label>\r\n                <input type=\"password\" class=\"form-control\" id=\"inputPassword\" [(ngModel)]=\"password\" name=\"password\"\r\n                    placeholder=\"Password\">\r\n                <!-- <a [routerLink]=\"['/forget-password']\">Forget password?</a> -->\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-3\">\r\n                <button type=\"submit\" class=\"btn btn-primary\">Sign In</button>\r\n            </div>\r\n            <div class=\"col-2\">\r\n                <h4 class=\"pt-2\">Or</h4>\r\n            </div>\r\n            <div class=\"col-5\">\r\n                <button [routerLink]=\"['/register']\" class=\"btn btn-primary\">Sign Up</button>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </form>\r\n</div>","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../../services/user.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { DatePipe } from '@angular/common';\r\nimport { User } from '../../models/User';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css'],\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  constructor(\r\n    private _userService: UserService,\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: ToastrService,\r\n    private modalService: BsModalService,\r\n    private datePipe: DatePipe\r\n  ) {}\r\n\r\n  typeVolunteer = 'volunteer';\r\n  typeOwner = 'owner';\r\n  modalRef: BsModalRef;\r\n  user: User;\r\n  oldPassword: string;\r\n  newPassword: string;\r\n  confirmNewPassword: string;\r\n  phoneNumberVerificationToken: string;\r\n  loaded: boolean;\r\n\r\n  ngOnInit(): void {\r\n    this.loaded = false;\r\n    this.spinner.show();\r\n\r\n    this._userService.getProfile().subscribe((res) => {\r\n      res.data.birthdate = this.datePipe.transform(\r\n        res.data.birthdate,\r\n        'yyyy-MM-dd'\r\n      );\r\n\r\n      this.user = res.data;\r\n\r\n      setTimeout(() => {\r\n        this.loaded = true;\r\n        this.spinner.hide();\r\n      }, 1000);\r\n    },\r\n    (err) => {\r\n      this.toastr.error(err.error.msg);\r\n    });\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template);\r\n  }\r\n\r\n  updateUserProfile() {\r\n    if (!this.user.name.firstName) {\r\n      this.toastr.error(\"First name can't be empty\");\r\n      return false;\r\n    }\r\n\r\n    if (!this.user.name.lastName) {\r\n      this.toastr.error(\"Last name can't be empty\");\r\n      return false;\r\n    }\r\n\r\n    if (!this.user.gender) {\r\n      this.toastr.error(\"Gender can't be empty\");\r\n      return false;\r\n    }\r\n\r\n    if (!this.user.birthdate) {\r\n      this.toastr.error(\"Birthdate can't be empty\");\r\n      return false;\r\n    }\r\n\r\n    this.modalRef.hide();\r\n\r\n    const updatedUser = {\r\n      name: {\r\n        firstName: this.user.name.firstName,\r\n        lastName: this.user.name.lastName,\r\n      },\r\n      address: {\r\n        floor: this.user.address.floor ? this.user.address.floor : undefined,\r\n        apartmentNumber: this.user.address.apartmentNumber\r\n          ? this.user.address.apartmentNumber\r\n          : undefined,\r\n        buildingNumber: this.user.address.buildingNumber\r\n          ? this.user.address.buildingNumber\r\n          : undefined,\r\n        streetName: this.user.address.streetName\r\n          ? this.user.address.streetName\r\n          : undefined,\r\n        district: this.user.address.district\r\n          ? this.user.address.district\r\n          : undefined,\r\n        city: this.user.address.city ? this.user.address.city : undefined,\r\n        country: this.user.address.country\r\n          ? this.user.address.country\r\n          : undefined,\r\n      },\r\n      gender: this.user.gender,\r\n      birthdate: this.user.birthdate,\r\n    };\r\n\r\n    this._userService.updateUser(updatedUser).subscribe(\r\n      (res) => {\r\n        res.data.birthdate = this.datePipe.transform(\r\n          res.data.birthdate,\r\n          'yyyy-MM-dd'\r\n        );\r\n        this.user = res.data;\r\n        this.toastr.success('User updated successfully');\r\n      },\r\n      (err) => {\r\n        this.toastr.error(err.error.msg);\r\n      }\r\n    );\r\n  }\r\n\r\n  updateUserPassword() {\r\n    if (!this.oldPassword) {\r\n      this.toastr.error(\"Old password can't be empty\");\r\n      return false;\r\n    }\r\n    if (!this.newPassword) {\r\n      this.toastr.error(\"new password can't be empty\");\r\n      return false;\r\n    }\r\n    if (!this.confirmNewPassword) {\r\n      this.toastr.error(\"Confirm new password can't be empty\");\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      this.confirmNewPassword.length < 8 ||\r\n      this.oldPassword.length < 8 ||\r\n      this.newPassword.length < 8\r\n    ) {\r\n      this.toastr.error(\"Passwords length can't be less than 8\");\r\n      return false;\r\n    }\r\n\r\n    if (this.newPassword != this.confirmNewPassword) {\r\n      this.toastr.error(\"New password doesn't match with confirm new password\");\r\n      return false;\r\n    }\r\n\r\n    const passwordObj = {\r\n      oldPassword: this.oldPassword,\r\n      newPassword: this.newPassword,\r\n    };\r\n    this._userService.updatePasswod(passwordObj).subscribe(\r\n      (res) => {\r\n        this.modalRef.hide();\r\n        this.toastr.success('Password updated successfully');\r\n      },\r\n      (err) => {\r\n        this.toastr.error(err.error.msg);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loaded\">\r\n    <div class=\"card text-center\">\r\n        <div class=\"card-header\">\r\n            {{user?.name?.firstName}} {{user?.name?.lastName}}\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <img src=\"https://cyyann.s3.amazonaws.com/{{user?.photo}}\" width=\"120px\" class=\"mt-3 mb-3\"\r\n                style=\"border-radius: 50%;\" alt=\"Profile Image\">\r\n            <p class=\"card-text\">Email: {{user?.email?.value}}</p>\r\n            <p class=\"card-text\">Gender: {{user?.gender}}</p>\r\n            <p class=\"card-text\">Birthdate: {{user?.birthdate | date}}</p>\r\n            <p class=\"card-text\" *ngIf=\"user?.address\">Address: {{user?.address.country}}, {{user?.address.city}},\r\n                {{user?.address.district}}, {{user?.address.streetName}},\r\n                {{user?.address.buildingNumber}}, {{user?.address.floor}}, {{user?.address.apartmentNumber}}\r\n            </p>\r\n            <button (click)=\"openModal(updateProfile)\" class=\"btn btn-primary mr-2\">Edit profile</button>\r\n            <!-- <button (click)=\"openModal(addPhoneNumber)\" *ngIf=\"!user?.phoneNumber\" class=\"btn btn-primary mr-2\">Add\r\n                phone\r\n                number</button> -->\r\n\r\n            <!-- <button (click)=\"openModal(verifyPhoneNumber)\" *ngIf=\" user?.phoneNumber && !user?.phoneNumber?.isVerified\"\r\n                class=\"btn btn-success mr-2\">Confirm\r\n                phone number</button> -->\r\n\r\n            <button (click)=\"openModal(updatePassword)\" class=\"btn btn-primary mr-2\">Update password</button>\r\n        </div>\r\n        <div class=\"card-footer text-muted\">\r\n            Joined {{user?.createdAt | date}}\r\n        </div>\r\n    </div>\r\n    <div class=\"row mt-3 mb-3\" *ngIf=\"user?._id\">\r\n        <div class=\"col\">\r\n            <tabset type=\"pills\" [justified]=\"true\">\r\n                <tab heading=\"Owned shopping lists\">\r\n                    <app-shopping-lists [id]=\"user?._id\" [type]='typeOwner'></app-shopping-lists>\r\n                </tab>\r\n                <tab heading=\"Volunteered shopping lists\">\r\n                    <app-shopping-lists [id]=\"user?._id\" [type]='typeVolunteer'></app-shopping-lists>\r\n                </tab>\r\n            </tabset>\r\n        </div>\r\n    </div>\r\n</ng-container>\r\n\r\n\r\n\r\n<ng-template #updateProfile>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title pull-left\">Update profile</h4>\r\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\" style=\"max-height: 400px; overflow-y: scroll;\">\r\n        <form (submit)=\"updateUserProfile()\">\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"inputFirstName\">First name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"inputFirstName\" [(ngModel)]=\"user.name.firstName\"\r\n                        name=\"firstName\" placeholder=\"First name\" required>\r\n                </div>\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"inputLastName\">Last name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"inputLastName\" [(ngModel)]=\"user.name.lastName\"\r\n                        name=\"lastName\" placeholder=\"Last name\" required>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"inputGender\">Gender</label>\r\n                    <select id=\"inputGender\" [(ngModel)]=\"user.gender\" name=\"gender\" class=\"form-control\" required>\r\n                        <option selected value=\"Male\">Male</option>\r\n                        <option value=\"Female\">Female</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"inputBirthdate\">Birthdate</label>\r\n                    <input type=\"date\" class=\"form-control\" id=\"inputBirthdate\" [(ngModel)]=\"user.birthdate\"\r\n                        name=\"birthdate\" placeholder=\"birthdate\" required>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"inputCountry\">Country</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"inputCountry\" name=\"country\"\r\n                        [(ngModel)]=\"user.address.country\">\r\n                </div>\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"inputCity\">City</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"inputCity\" name=\"city\" [(ngModel)]=\"user.address.city\">\r\n                </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"inputDistrict\">District</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"inputDistrict\" name=\"district\"\r\n                        [(ngModel)]=\"user.address.district\">\r\n                </div>\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"inputStreetName\">Street Name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"inputStreetName\" name=\"streetName\"\r\n                        [(ngModel)]=\"user.address.streetName\">\r\n                </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"inputBuildingNumber\">Building Number</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"inputBuildingNumber\" name=\"buildingNumber\"\r\n                        [(ngModel)]=\"user.address.buildingNumber\">\r\n                </div>\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"inputFloor\">Floor</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"inputFloor\" [(ngModel)]=\"user.address.floor\"\r\n                        name=\"floor\">\r\n                </div>\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"inputApartmentNumber\">Apartment Number</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"inputApartmentNumber\" name=\"apartmentNumber\"\r\n                        [(ngModel)]=\"user.address.apartmentNumber\">\r\n                </div>\r\n\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\">Update</button>\r\n        </form>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #updatePassword>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title pull-left\">Update password</h4>\r\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\" style=\"max-height: 400px; overflow-y: scroll;\">\r\n        <form (submit)=\"updateUserPassword()\">\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-12\">\r\n                    <label for=\"inputOldPassword\">Old password</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"inputOldPassword\" [(ngModel)]=\"oldPassword\"\r\n                        name=\"oldPassword\" placeholder=\"Old password\" required>\r\n                </div>\r\n                <div class=\"form-group col-md-12\">\r\n                    <label for=\"inputPassword\">New password</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"inputPassword\" [(ngModel)]=\"newPassword\"\r\n                        name=\"password\" placeholder=\"New password\" required>\r\n                </div>\r\n                <div class=\"form-group col-md-12\">\r\n                    <label for=\"inputConfirmPassword\">Confirm new password</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"inputConfirmPassword\"\r\n                        [(ngModel)]=\"confirmNewPassword\" name=\"confirmPassword\" placeholder=\"Confirm New password\"\r\n                        required>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <button type=\"submit\" class=\"btn btn-primary\">Sign Up</button>\r\n        </form>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<!-- <ng-template #addPhoneNumber>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title pull-left\">Add phone number</h4>\r\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\" style=\"max-height: 400px; overflow-y: scroll;\">\r\n        <form action=\"\">\r\n\r\n        </form>\r\n    </div>\r\n</ng-template> -->\r\n\r\n\r\n\r\n<!-- <ng-template #verifyPhoneNumber>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title pull-left\">Add phone number</h4>\r\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\" style=\"max-height: 400px; overflow-y: scroll;\">\r\n        <form (submit)=\"verifyUserPhoneNumber()\">\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"inputPhoneNumberVerificationToken\">Phone number verification code</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"inputPhoneNumberVerificationToken\"\r\n                        [(ngModel)]=\"phoneNumberVerificationToken\" name=\"phoneNumberVerificationToken\"\r\n                        placeholder=\"Phone number verification code\" required>\r\n                </div>\r\n            </div>\r\n\r\n            <button type=\"submit\" class=\"btn btn-primary\">Sign Up</button>\r\n        </form>\r\n    </div>\r\n</ng-template> -->","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../../services/user.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password: string;\r\n  birthdate: Date;\r\n  gender: string;\r\n\r\n  constructor(\r\n    private _userService: UserService,\r\n    private _router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.gender = 'Male';\r\n  }\r\n\r\n  onSubmit() {\r\n    if (!this.firstName) {\r\n      this.toastr.error(\"First name can't be empty\");\r\n      return false;\r\n    }\r\n    if (!this.lastName) {\r\n      this.toastr.error(\"Last name can't be empty\");\r\n      return false;\r\n    }\r\n    if (!this.email) {\r\n      this.toastr.error(\"Email can't be empty\");\r\n      return false;\r\n    }\r\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.email)) {\r\n      this.toastr.error('Please write correct email');\r\n      return false;\r\n    }\r\n    if (!this.password) {\r\n      this.toastr.error(\"Password can't be empty\");\r\n      return false;\r\n    }\r\n    if (this.password.length < 8) {\r\n      this.toastr.error(\"Password can't be less than 8 char\");\r\n      return false;\r\n    }\r\n    if (!this.gender) {\r\n      this.toastr.error(\"Gender can't be empty\");\r\n      return false;\r\n    }\r\n    if (!this.birthdate) {\r\n      this.toastr.error(\"Birthdate can't be empty\");\r\n      return false;\r\n    }\r\n\r\n    const user = {\r\n      name: {\r\n        firstName: this.firstName,\r\n        lastName: this.lastName,\r\n      },\r\n      email: this.email,\r\n      password: this.password,\r\n      birthdate: this.birthdate,\r\n      gender: this.gender,\r\n    };\r\n\r\n    this._userService.signUp(user).subscribe((res) => {\r\n      this.toastr.success('User created successfully');\r\n\r\n      this._router.navigate(['/login']);\r\n    },\r\n    (err) => {\r\n      this.toastr.error(err.error.msg);\r\n    });\r\n  }\r\n}\r\n","<form (submit)=\"onSubmit()\">\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col-md-6\">\r\n      <label for=\"inputFirstName\">First name</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"inputFirstName\" [(ngModel)]=\"firstName\" name=\"firstName\"\r\n        placeholder=\"First name\" required>\r\n    </div>\r\n    <div class=\"form-group col-md-6\">\r\n      <label for=\"inputLastName\">Last name</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"inputLastName\" [(ngModel)]=\"lastName\" name=\"lastName\"\r\n        placeholder=\"Last name\" required>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col-md-6\">\r\n      <label for=\"inputEmail\">Email</label>\r\n      <input type=\"email\" class=\"form-control\" id=\"inputEmail\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"Email\"\r\n        required>\r\n    </div>\r\n    <div class=\"form-group col-md-6\">\r\n      <label for=\"inputPassword\">Password</label>\r\n      <input type=\"password\" class=\"form-control\" id=\"inputPassword\" [(ngModel)]=\"password\"\r\n        name=\"password\" placeholder=\"Password\" required>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col-md-6\">\r\n      <label for=\"inputGender\">Gender</label>\r\n      <select id=\"inputGender\" [(ngModel)]=\"gender\" name=\"gender\" class=\"form-control\" required>\r\n        <option selected value=\"Male\">Male</option>\r\n        <option value=\"Female\">Female</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"form-group col-md-6\">\r\n      <label for=\"inputBirthdate\">Birthdate</label>\r\n      <input type=\"date\" class=\"form-control\" id=\"inputBirthdate\" [(ngModel)]=\"birthdate\" name=\"birthdate\"\r\n        placeholder=\"birthdate\" required>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <div class=\"form-check\">\r\n      <input class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" required>\r\n      <label class=\"form-check-label\" for=\"gridCheck\">\r\n        I accept the terms of service.\r\n      </label>\r\n    </div>\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary\">Sign Up</button>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css'],\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  password: string;\r\n  confirmPassword: string;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onSubmit() {\r\n  }\r\n}\r\n","<div class=\"container m-auto\" style=\"width: 45%;\">\r\n    <form (submit)=\"onSubmit()\">\r\n\r\n        <div class=\"form-row\">\r\n            <div class=\"form-group col-md-12\">\r\n                <label for=\"inputPassword\">Password</label>\r\n                <input type=\"password\" class=\"form-control\" id=\"inputPassword\" [(ngModel)]=\"password\" name=\"password\"\r\n                    placeholder=\"Password\">\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-row\">\r\n            <div class=\"form-group col-md-12\">\r\n                <label for=\"inputConfirmPassword\">Confirm Password</label>\r\n                <input type=\"password\" class=\"form-control\" id=\"inputConfirmPassword\" [(ngModel)]=\"confirmPassword\"\r\n                    name=\"confirmPassword\" placeholder=\"Confirm Password\">\r\n            </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn btn-primary\">Reset Password</button>\r\n    </form>\r\n</div>","import {\r\n  Component,\r\n  OnInit,\r\n  EventEmitter,\r\n  Output,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { FormArray, FormGroup, FormControl, FormBuilder } from '@angular/forms';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { faTrash, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-add-shopping-list',\r\n  templateUrl: './add-shopping-list.component.html',\r\n  styleUrls: ['./add-shopping-list.component.css'],\r\n})\r\nexport class AddShoppingListComponent implements OnInit {\r\n  constructor(\r\n    private modalService: BsModalService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  faTrash = faTrash;\r\n  faPlus = faPlus;\r\n  itemName: string;\r\n  quantity: string;\r\n  notes: string;\r\n  modalRef: BsModalRef;\r\n  items: FormArray;\r\n  shoppingList: FormGroup;\r\n\r\n  @Output() addShoppingList: EventEmitter<any> = new EventEmitter();\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n\r\n  initForm() {\r\n    this.shoppingList = new FormGroup({\r\n      notes: new FormControl(''),\r\n      items: new FormArray([\r\n        new FormGroup({\r\n          itemName: new FormControl(''),\r\n          quantity: new FormControl(''),\r\n        }),\r\n      ]),\r\n    });\r\n\r\n    this.items = this.shoppingList.get('items') as FormArray;\r\n  }\r\n\r\n  addNewRow() {\r\n    this.items.push(\r\n      new FormGroup({\r\n        itemName: new FormControl(''),\r\n        quantity: new FormControl(''),\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteRow(index: number) {\r\n    this.items.removeAt(index);\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template);\r\n  }\r\n\r\n  onSubmit() {\r\n    for (let i = 0; i < this.shoppingList.get('items').value.length; i++) {\r\n      let element = this.shoppingList.get('items').value[i];\r\n      if (element.itemName.length < 1) {\r\n        this.toastr.error(\"Item name can't be empty\");\r\n        return;\r\n      }\r\n\r\n      if (element.quantity.length < 1) {\r\n        this.toastr.error(\"Quantity can't be empty\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (this.shoppingList.get('notes').value.length < 1) {\r\n      this.toastr.error(\"Notes can't be empty\");\r\n      return;\r\n    }\r\n\r\n    const shoppingList = {\r\n      items: this.shoppingList.get('items').value,\r\n      notes: this.shoppingList.get('notes').value,\r\n    };\r\n\r\n    this.modalRef.hide();\r\n\r\n    this.initForm();\r\n\r\n    this.addShoppingList.emit(shoppingList);\r\n  }\r\n}\r\n","\r\n<button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(template)\">New shopping list</button>\r\n\r\n\r\n<ng-template #template>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Add shopping list</h4>\r\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\" style=\"max-height: 400px; overflow-y: scroll;\">\r\n    <form [formGroup]=\"shoppingList\" (submit)=\"onSubmit()\">\r\n      <ng-container formArrayName=\"items\" *ngFor=\"let _ of items.controls; index as i\">\r\n        <ng-container [formGroupName]=\"i\">\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group col-md-5\">\r\n              <label for=\"inputItemName\">Item Name</label>\r\n              <input type=\"text\" formControlName=\"itemName\" class=\"form-control\" id=\"inputItemName\"\r\n                placeholder=\"Item name\">\r\n            </div>\r\n            <div class=\"form-group col-md-5\">\r\n              <label for=\"inputQuantity\">Quantity</label>\r\n              <input type=\"number\" formControlName=\"quantity\" class=\"form-control\" id=\"inputQuantity\"\r\n                placeholder=\"Quantity\">\r\n            </div>\r\n            <div class=\"form-group col-md-1\" style=\"margin-top: 2rem; padding-left: 0;\">\r\n              <button (click)=\"deleteRow(i)\" class=\"btn btn-danger\">\r\n                <fa-icon [icon]=\"faTrash\"></fa-icon>\r\n              </button>\r\n            </div>\r\n            <div class=\"form-group col-md-1\" style=\"margin-top: 2rem;\">\r\n              <button *ngIf=\"items.controls.length - 1 == i\" type=\"button\" (click)=\"addNewRow()\"\r\n                class=\"btn btn-primary\">\r\n                <fa-icon [icon]=\"faPlus\"></fa-icon>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n        </ng-container>\r\n      </ng-container>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"inputNotes\">Notes</label>\r\n        <textarea type=\"text\" class=\"form-control\" id=\"inputNotes\" placeholder=\"Notes\" formControlName=\"notes\">\r\n          </textarea>\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"btn btn-success btn-lg btn-block\">Add</button>\r\n\r\n    </form>\r\n  </div>\r\n</ng-template>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport {\r\n  faTrash,\r\n  faPlus,\r\n  faShoppingCart,\r\n  faEraser\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-shopping-list',\r\n  templateUrl: './shopping-list.component.html',\r\n  styleUrls: ['./shopping-list.component.css'],\r\n})\r\nexport class ShoppingListComponent implements OnInit {\r\n  @Input() shoppingList: any;\r\n  @Input() userId: any;\r\n\r\n  @Output() deleteShoppingList: EventEmitter<any> = new EventEmitter();\r\n  @Output() buyShoppingList: EventEmitter<any> = new EventEmitter();\r\n  @Output() unBuyShoppingList: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor() {}\r\n  \r\n  faTrash = faTrash;\r\n  faPlus = faPlus;\r\n  faShoppingCart = faShoppingCart;\r\n  faEraser = faEraser;\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onDelete(id) {\r\n    this.deleteShoppingList.emit(id);\r\n  }\r\n\r\n  onBuy(id) {\r\n    this.buyShoppingList.emit(id);\r\n  }\r\n\r\n  onUnBuy(id) {\r\n    this.unBuyShoppingList.emit(id);\r\n  }\r\n}\r\n","<div class=\"col-md-auto\">\r\n    <div class=\"card text-dark mb-3\" style=\"width: 310px; height:300px; overflow-y: scroll;\">\r\n        <div class=\"card-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-2\">\r\n                    <img src=\"https://cyyann.s3.amazonaws.com/{{shoppingList?.owner?.photo}}\" width=\"35px\"\r\n                        class=\"mt-3 mb-3\" style=\"border-radius: 50%;\" alt=\"Profile Image\">\r\n                </div>\r\n                <div class=\"col-md-8 pt-3\">\r\n                    <a routerLink=\"/profile/{{shoppingList?.owner?._id}}\">\r\n                        {{shoppingList.owner.name.firstName}} {{shoppingList.owner.name.lastName}}\r\n                    </a>\r\n                </div>\r\n                <div class=\"col-md-2 pt-2\" *ngIf=\"shoppingList?.owner?._id == userId\">\r\n                    <button (click)=\"onDelete(shoppingList?._id)\" class=\"btn btn-danger m-auto float-right\">\r\n                        <fa-icon [icon]=\"faTrash\"></fa-icon>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <ul class=\"list-group\">\r\n                <li class=\"text-dark list-group-item d-flex justify-content-between align-items-center\"\r\n                    *ngFor=\"let item of shoppingList?.items;\">\r\n                    {{item.itemName}}\r\n                    <span class=\"badge badge-primary badge-pill\">{{item.quantity}}</span>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"row mt-3\">\r\n                <div class=\"col-12\" *ngIf=\"!shoppingList?.volunteer && shoppingList?.owner._id != userId\">\r\n                    <button (click)=\"onBuy(shoppingList?._id)\" class=\"btn btn-primary btn-block\">\r\n                        volunteer <fa-icon [icon]=\"faShoppingCart\"></fa-icon>\r\n                    </button>\r\n                </div>\r\n                <div class=\"col-12 text-center\" *ngIf=\"!shoppingList?.volunteer && shoppingList?.owner._id == userId\">\r\n                    No one has volunteered yet\r\n                </div>\r\n                <div class=\"col-12 text-center\"\r\n                    *ngIf=\"shoppingList?.volunteer && shoppingList?.volunteer?._id != userId\">\r\n                    <a routerLink=\"/profile/{{shoppingList?.volunteer?._id}}\">\r\n                        {{shoppingList.volunteer.name.firstName}} {{shoppingList.volunteer.name.lastName}}\r\n                    </a>\r\n                    volunteered\r\n                </div>\r\n                <div class=\"col-12\" *ngIf=\"shoppingList?.volunteer && shoppingList?.volunteer?._id == userId\">\r\n                    <button (click)=\"onUnBuy(shoppingList?._id)\" class=\"btn btn-danger btn-block\">\r\n                        revoke volunteering <fa-icon [icon]=\"faEraser\"></fa-icon>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"card-footer text-muted\">\r\n            <p class=\"card-text\">Note: {{shoppingList.notes}}</p>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- <button (click)=\"onDelete(shoppingList._id)\" class=\"btn-danger\">X</button> -->","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ShoppingListService } from '../../services/shopping-list.service';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { UserService } from '../../services/user.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-shopping-lists',\r\n  templateUrl: './shopping-lists.component.html',\r\n  styleUrls: ['./shopping-lists.component.css'],\r\n})\r\nexport class ShoppingListsComponent implements OnInit {\r\n  constructor(\r\n    private _shoppingListService: ShoppingListService,\r\n    private _userService: UserService,\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  shoppingLists: any[];\r\n  currentShoppingLists: any[];\r\n  currentPage: number;\r\n  userId: string;\r\n  loaded: boolean;\r\n\r\n  @Input() id;\r\n  @Input() type;\r\n\r\n  pageChanged(event: PageChangedEvent): void {\r\n    this.currentPage = event.page;\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.currentShoppingLists = this.shoppingLists.slice(startItem, endItem);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loaded = false;\r\n    this.spinner.show();\r\n    this.currentPage = 1;\r\n    this.userId = this._userService.getId();\r\n    this.getAll();\r\n  }\r\n\r\n  getAll(): any {\r\n    if (this.type) {\r\n      if (this.type == 'owner') {\r\n        this._shoppingListService.getOwner(this.id).subscribe((res) => {\r\n          if (res.data.shoppingLists) {\r\n            this.shoppingLists = res.data.shoppingLists;\r\n            this.updateSubArray();\r\n            setTimeout(() => {\r\n              this.spinner.hide();\r\n              this.loaded = true;\r\n            }, 1000);\r\n          }\r\n        },\r\n        (err) => {\r\n          this.toastr.error(err.error.msg);\r\n        });\r\n      } else if (this.type == 'volunteer') {\r\n        this._shoppingListService.getVolunteer(this.id).subscribe((res) => {\r\n          if (res.data.shoppingLists) {\r\n            this.shoppingLists = res.data.shoppingLists;\r\n            this.updateSubArray();\r\n            setTimeout(() => {\r\n              this.spinner.hide();\r\n              this.loaded = true;\r\n            }, 1000);\r\n          }\r\n        },\r\n        (err) => {\r\n          this.toastr.error(err.error.msg);\r\n        });\r\n      }\r\n    } else {\r\n      this._shoppingListService.getAll().subscribe((res) => {\r\n        if (res.data.shoppingLists) {\r\n          this.shoppingLists = res.data.shoppingLists;\r\n          this.updateSubArray();\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n            this.loaded = true;\r\n          }, 1000);\r\n        }\r\n      },\r\n      (err) => {\r\n        this.toastr.error(err.error.msg);\r\n      });\r\n    }\r\n  }\r\n\r\n  updateSubArray(): void {\r\n    const startItem = (this.currentPage - 1) * 3;\r\n    const endItem = this.currentPage * 3;\r\n    this.currentShoppingLists = this.shoppingLists.slice(startItem, endItem);\r\n  }\r\n\r\n  deleteShoppingList(id: string) {\r\n    this.shoppingLists = this.shoppingLists.filter((sl) => sl._id !== id);\r\n\r\n    this.updateSubArray();\r\n\r\n    this._shoppingListService.deleteShoppingList(id).subscribe((res) => {\r\n      this.toastr.success('Shopping list deleted succesfully!');\r\n\r\n    },\r\n      (err) => {\r\n        this.toastr.error(err.error.msg);\r\n      });\r\n  }\r\n\r\n  addShoppingList(shoppingList: any) {\r\n    this._shoppingListService.create(shoppingList).subscribe((res) => {\r\n      this.shoppingLists.unshift(res.data.shoppingList);\r\n      this.updateSubArray();\r\n      this.toastr.success('Shopping list created succesfully!');\r\n    },\r\n    (err) => {\r\n      this.toastr.error(err.error.msg);\r\n    });\r\n  }\r\n\r\n  buyShoppingList(id) {\r\n    this._shoppingListService.buy(id).subscribe((res) => {\r\n      for (let i = 0; i < this.shoppingLists.length; i++) {\r\n        if (this.shoppingLists[i]._id == id) {\r\n          this.shoppingLists[i] = res.data.shoppingList;\r\n          break;\r\n        }\r\n      }\r\n      this.updateSubArray();\r\n      this.toastr.success('You have successfully volunteered!');\r\n    },\r\n    (err) => {\r\n      this.toastr.error(err.error.msg);\r\n    });\r\n  }\r\n\r\n  unBuyShoppingList(id) {\r\n    this._shoppingListService.unBuy(id).subscribe((res) => {\r\n      for (let i = 0; i < this.shoppingLists.length; i++) {\r\n        if (this.shoppingLists[i]._id == id) {\r\n          if (this.type && this.type == 'volunteer') {\r\n            this.shoppingLists.splice(i, 1);\r\n          } else {\r\n            this.shoppingLists[i] = res.data.shoppingList;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n      this.updateSubArray();\r\n      this.toastr.success('You have successfully revoked volunteering!');\r\n    },\r\n    (err) => {\r\n      this.toastr.error(err.error.msg);\r\n    });\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loaded\">\r\n    <div class=\"row mt-3\" *ngIf=\"!type\">\r\n        <div class=\"col\">\r\n            <app-add-shopping-list (addShoppingList)=\"addShoppingList($event)\"></app-add-shopping-list>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row mt-3\">\r\n        <app-shopping-list *ngFor=\"let shoppingList of currentShoppingLists\" [shoppingList]=\"shoppingList\"\r\n            [userId]=\"userId\" (deleteShoppingList)=\"deleteShoppingList($event)\"\r\n            (buyShoppingList)=\"buyShoppingList($event)\" (unBuyShoppingList)=\"unBuyShoppingList($event)\">\r\n        </app-shopping-list>\r\n        <div class=\"col mt-5\" *ngIf=\"currentShoppingLists?.length == 0\">\r\n            <h4 class=\"d-flex justify-content-center\">No shopping lists avilable</h4>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row mt-5\">\r\n        <div class=\"col\">\r\n            <pagination class=\"d-flex justify-content-center\" [totalItems]=\"shoppingLists?.length\" [itemsPerPage]=\"3\"\r\n                (pageChanged)=\"pageChanged($event)\">\r\n            </pagination>\r\n        </div>\r\n    </div>\r\n</ng-container>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserService } from '../../services/user.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css'],\r\n})\r\nexport class UserComponent implements OnInit {\r\n  constructor(\r\n    private _userService: UserService,\r\n    private _router: Router,\r\n    private route: ActivatedRoute,\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  user: any;\r\n  id: string;\r\n  typeVolunteer = 'volunteer';\r\n  typeOwner = 'owner';\r\n\r\n  loaded: boolean;\r\n\r\n  getId() {\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loaded = false;\r\n    this.spinner.show();\r\n\r\n    this.getId();\r\n\r\n    if (this._userService.getId() === this.id) {\r\n      this._router.navigate(['/profile']);\r\n    }\r\n\r\n    this._userService.getUser(this.id).subscribe((res) => {\r\n      this.user = res.data;\r\n\r\n      setTimeout(() => {\r\n        this.loaded = true;\r\n        this.spinner.hide();\r\n      }, 1000);\r\n    },\r\n    (err) => {\r\n      this.toastr.error(err.error.msg);\r\n    });\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loaded\">\r\n    <div class=\"card text-center\">\r\n        <div class=\"card-header\">\r\n            {{user?.name?.firstName}} {{user?.name?.lastName}}\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <img src=\"https://cyyann.s3.amazonaws.com/{{user?.photo}}\" width=\"120px\" class=\"mt-3 mb-3\"\r\n                style=\"border-radius: 50%;\" alt=\"Profile Image\">\r\n            <p class=\"card-text\">Email: {{user?.email?.value}}</p>\r\n            <p class=\"card-text\">Gender: {{user?.gender}}</p>\r\n            <p class=\"card-text\">Birthdate: {{user?.birthdate | date}}</p>\r\n            <!-- <a href=\"#\" class=\"btn btn-primary\">Edit profile</a> -->\r\n        </div>\r\n        <div class=\"card-footer text-muted\">\r\n            Joined {{user?.createdAt | date}}\r\n        </div>\r\n    </div>\r\n    <div class=\"row mt-3 mb-3\" *ngIf=\"user?._id\">\r\n        <div class=\"col\">\r\n            <tabset type=\"pills\" [justified]=\"true\">\r\n                <tab heading=\"Owned shopping lists\">\r\n                    <app-shopping-lists [id]=\"user?._id\" [type]='typeOwner'></app-shopping-lists>\r\n                </tab>\r\n                <tab heading=\"Volunteered shopping lists\">\r\n                    <app-shopping-lists [id]=\"user?._id\" [type]='typeVolunteer'></app-shopping-lists>\r\n                </tab>\r\n            </tabset>\r\n        </div>\r\n    </div>\r\n</ng-container>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../../services/user.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-verify-email',\r\n  templateUrl: './verify-email.component.html',\r\n  styleUrls: ['./verify-email.component.css'],\r\n})\r\nexport class VerifyEmailComponent implements OnInit {\r\n  constructor(\r\n    private _userService: UserService,\r\n    private _router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  emailVerificationToken: string;\r\n\r\n  ngOnInit(): void {\r\n    this.emailVerificationToken = this.route.snapshot.paramMap.get(\r\n      'emailVerificationToken'\r\n    );\r\n\r\n    this._userService\r\n      .verifyEmail({ emailVerificationToken: this.emailVerificationToken })\r\n      .subscribe(\r\n        (resp) => {\r\n          if (!resp.success) {\r\n            // this._flash.show(resp.message, { cssClass: 'alert-danger' });\r\n            return false;\r\n          }\r\n          this._router.navigate(['/']);\r\n        },\r\n        (err) => {\r\n          this.toastr.error(err.error.msg);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<p>verify-email works!</p>\r\n","export const URL = 'http://localhost:3000';\r\nexport const AUTH_TOKEN = 'Authentication';\r\nexport const USER_ID = 'UserId';\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  Router,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from '../services/user.service';\r\nimport * as config from '../configurations';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthenticatedGuard implements CanActivate {\r\n  constructor(private _router: Router, private _userService: UserService) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    if (this._userService.isLoggedIn()) {\r\n      return true;\r\n    } else {\r\n      this._router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  Router,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from '../services/user.service';\r\nimport * as config from '../configurations';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UnauthenticatedGuard implements CanActivate {\r\n  constructor(private _router: Router, private _userService: UserService) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    if (!this._userService.isLoggedIn()) {\r\n      return true;\r\n    } else {\r\n      this._router.navigate(['/']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport * as config from '../configurations';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ShoppingListService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  create(createObj: any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(config.AUTH_TOKEN),\r\n      }),\r\n    };\r\n    return this.http.post<any>(\r\n      `${config.URL}/shopping-list/create`,\r\n      createObj,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  buy(id: string): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(config.AUTH_TOKEN),\r\n      }),\r\n    };\r\n\r\n    return this.http.get<any>(\r\n      `${config.URL}/shopping-list/buy/${id}`,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  unBuy(id: string): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(config.AUTH_TOKEN),\r\n      }),\r\n    };\r\n    return this.http.get<any>(\r\n      `${config.URL}/shopping-list/unBuy/${id}`,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  getAll(): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(config.AUTH_TOKEN),\r\n      }),\r\n    };\r\n\r\n    return this.http.get<any>(\r\n      `${config.URL}/shopping-list/getAll`,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  getOwner(id: string): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(config.AUTH_TOKEN),\r\n      }),\r\n    };\r\n    return this.http.get<any>(\r\n      `${config.URL}/shopping-list/getMyShoppingLists/${id}`,\r\n      httpOptions\r\n    );\r\n  }\r\n  getVolunteer(id: string): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(config.AUTH_TOKEN),\r\n      }),\r\n    };\r\n\r\n    return this.http.get<any>(\r\n      `${config.URL}/shopping-list/getMyVolunteerShoppingLists/${id}`,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  deleteShoppingList(id): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(config.AUTH_TOKEN),\r\n      }),\r\n    };\r\n    return this.http.delete<any>(\r\n      `${config.URL}/shopping-list/delete/${id}`,\r\n      httpOptions\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport * as config from '../configurations';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  itemValue = new Subject<string>();\r\n\r\n  constructor(private http: HttpClient, private _router: Router) {}\r\n\r\n  signUp(signUpObj: any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    };\r\n    return this.http.post<any>(\r\n      `${config.URL}/user/sign-up`,\r\n      signUpObj,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  signIn(signInObj: any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    };\r\n    return this.http.post<any>(\r\n      `${config.URL}/user/sign-in`,\r\n      signInObj,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  signOut() {\r\n    localStorage.removeItem(config.AUTH_TOKEN);\r\n    this.itemValue.next(\"\");\r\n    this._router.navigate(['/login']);\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return !!localStorage.getItem(config.AUTH_TOKEN);\r\n  }\r\n\r\n  getProfile() {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(config.AUTH_TOKEN),\r\n      }),\r\n    };\r\n    return this.http.get<any>(`${config.URL}/user/profile`, httpOptions);\r\n  }\r\n\r\n  getId() {\r\n    return localStorage.getItem(config.USER_ID);\r\n  }\r\n\r\n  getUser(id: string) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(config.AUTH_TOKEN),\r\n      }),\r\n    };\r\n    return this.http.get<any>(`${config.URL}/user/getUser/${id}`, httpOptions);\r\n  }\r\n\r\n  saveUser(token: string, id: string): void {\r\n    localStorage.setItem(config.AUTH_TOKEN, token);\r\n    localStorage.setItem(config.USER_ID, id);\r\n    this.itemValue.next(token);\r\n  }\r\n\r\n  verifyEmail(verifyEmailObj: any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    };\r\n    return this.http.post<any>(\r\n      `${config.URL}/user/verify-email`,\r\n      verifyEmailObj,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  forgetPassword(forgetPasswordObj: any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    };\r\n    return this.http.post<any>(\r\n      `${config.URL}/user/forget-password`,\r\n      forgetPasswordObj,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  resetPassword(resetPasswordObj: any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    };\r\n    return this.http.post<any>(\r\n      `${config.URL}/user/forget-password`,\r\n      resetPasswordObj,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  updatePasswod(updatePasswordObj: any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(config.AUTH_TOKEN),\r\n      }),\r\n    };\r\n\r\n    return this.http.patch<any>(\r\n      `${config.URL}/user/update-password`,\r\n      updatePasswordObj,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  updateUser(updateUserObj: any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(config.AUTH_TOKEN),\r\n      }),\r\n    };\r\n\r\n    return this.http.patch<any>(\r\n      `${config.URL}/user/update-profile`,\r\n      updateUserObj,\r\n      httpOptions\r\n    );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}