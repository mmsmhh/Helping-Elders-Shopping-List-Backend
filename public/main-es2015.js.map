{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/forget-password/forget-password.component.ts","./src/app/components/forget-password/forget-password.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/layout/footer/footer.component.ts","./src/app/components/layout/footer/footer.component.html","./src/app/components/layout/header/header.component.ts","./src/app/components/layout/header/header.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/reset-password/reset-password.component.ts","./src/app/components/reset-password/reset-password.component.html","./src/app/components/shopping-lists/add-shopping-list/add-shopping-list.component.ts","./src/app/components/shopping-lists/add-shopping-list/add-shopping-list.component.html","./src/app/components/shopping-lists/shopping-list/shopping-list.component.ts","./src/app/components/shopping-lists/shopping-list/shopping-list.component.html","./src/app/components/shopping-lists/shopping-lists.component.ts","./src/app/components/shopping-lists/shopping-lists.component.html","./src/app/components/user/user.component.ts","./src/app/components/user/user.component.html","./src/app/components/verify-email/verify-email.component.ts","./src/app/components/verify-email/verify-email.component.html","./src/app/configurations/index.ts","./src/app/guards/authenticated.guard.ts","./src/app/guards/unauthenticated.guard.ts","./src/app/services/shopping-list.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { ForgetPasswordComponent } from './components/forget-password/forget-password.component';\r\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\r\nimport { VerifyEmailComponent } from './components/verify-email/verify-email.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { UserComponent } from './components/user/user.component';\r\n\r\nimport { AuthenticatedGuard } from './guards/authenticated.guard';\r\n\r\nimport { UnauthenticatedGuard } from './guards/unauthenticated.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n    canActivate: [AuthenticatedGuard],\r\n  },\r\n  {\r\n    path: 'profile',\r\n    component: ProfileComponent,\r\n    canActivate: [AuthenticatedGuard],\r\n  },\r\n  {\r\n    path: 'profile/:id',\r\n    component: UserComponent,\r\n    canActivate: [AuthenticatedGuard],\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n    canActivate: [UnauthenticatedGuard],\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent,\r\n    canActivate: [UnauthenticatedGuard],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'help-elder-shopping-list';\r\n}\r\n","<app-header></app-header>\r\n<div class=\"container mt-5 mb-5\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n<app-footer></app-footer>\r\n<ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"medium\" color=\"#fff\" type=\"line-scale-pulse-out\" [fullScreen]=\"true\">\r\n  <p style=\"color: white\"> Loading... </p>\r\n</ngx-spinner>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ShoppingListsComponent } from './components/shopping-lists/shopping-lists.component';\r\nimport { ShoppingListComponent } from './components/shopping-lists/shopping-list/shopping-list.component';\r\nimport { HeaderComponent } from './components/layout/header/header.component';\r\nimport { FooterComponent } from './components/layout/footer/footer.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { ForgetPasswordComponent } from './components/forget-password/forget-password.component';\r\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\r\nimport { VerifyEmailComponent } from './components/verify-email/verify-email.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { UserComponent } from './components/user/user.component';\r\nimport { AddShoppingListComponent } from './components/shopping-lists/add-shopping-list/add-shopping-list.component';\r\nimport { UserService } from './services/user.service';\r\nimport { ShoppingListService } from './services/shopping-list.service';\r\nimport { AuthenticatedGuard } from './guards/authenticated.guard';\r\nimport { UnauthenticatedGuard } from './guards/unauthenticated.guard';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { NgxNavbarModule } from 'ngx-bootstrap-navbar';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ShoppingListsComponent,\r\n    ShoppingListComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    ForgetPasswordComponent,\r\n    ResetPasswordComponent,\r\n    VerifyEmailComponent,\r\n    ProfileComponent,\r\n    UserComponent,\r\n    AddShoppingListComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    PaginationModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FontAwesomeModule,\r\n    NgxNavbarModule,\r\n    TabsModule.forRoot(),\r\n    NgxSpinnerModule,\r\n    ToastrModule.forRoot({\r\n      timeOut: 5000,\r\n      positionClass: 'toast-bottom-right',\r\n    }),\r\n  ],\r\n  providers: [\r\n    UserService,\r\n    ShoppingListService,\r\n    AuthenticatedGuard,\r\n    UnauthenticatedGuard,\r\n    DatePipe,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forget-password',\r\n  templateUrl: './forget-password.component.html',\r\n  styleUrls: ['./forget-password.component.css']\r\n})\r\nexport class ForgetPasswordComponent implements OnInit {\r\n  \r\n  email: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit() {\r\n  }\r\n\r\n}\r\n","<div class=\"container m-auto\" style=\"width: 45%;\">\r\n  <form (submit)=\"onSubmit()\">\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col-md-12\">\r\n        <label for=\"inputEmail\">Email</label>\r\n        <input type=\"email\" class=\"form-control\" id=\"inputEmail\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"Email\">\r\n      </div>\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary\">Forget Password</button>\r\n\r\n  </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { UserService } from '../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private _userService: UserService\r\n  ) {}\r\n\r\n  typeAll: 'typeAll';\r\n  typeNotAssigned: 'typeNotAssigned';\r\n  userId: string;\r\n\r\n  ngOnInit(): void {\r\n    this.userId = this._userService.getId();\r\n    this.spinner.show();\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1000);\r\n  }\r\n}\r\n","<div class=\"m-5\">\r\n    <app-shopping-lists></app-shopping-lists>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- <nav class=\"navbar fixed-bottom navbar-expand-sm navbar-dark bg-dark\">\r\n    <div class=\"row text-white\">\r\n        <div class=\"col-12\">\r\n            <p class=\"mt-2 mb-2 ml-auto mr-auto\"> </p>\r\n        </div>\r\n    </div>\r\n</nav> -->\r\n\r\n<footer class=\"footer bg-dark\">\r\n    <div class=\"container pt-3 pb-3\">\r\n        <span class=\"text-white mt-5 mb-5\">© Mahmoud Saleh 2020 All Rights Reserved.</span>\r\n    </div>\r\n</footer>","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { UserService } from '../../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  constructor(public _userService: UserService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  isUserLoggedin: boolean;\r\n\r\n  onLogOutClicked(): void {\r\n    this._userService.signOut();\r\n  }\r\n}\r\n","<nav ngxNavbarDynamicExpand class=\"navbar navbar-dark bg-dark\">\r\n  <a class=\"navbar-brand\" [routerLink]=\"['/']\">Helping Elders</a>\r\n\r\n  <button class=\"navbar-toggler\" type=\"button\" (click)=\"collapse.toggle()\" aria-controls=\"main-nav\"\r\n    aria-expanded=\"false\" aria-label=\"Navigáció kapcsoló\">\r\n    <span class=\"navbar-toggler-icon d-flex align-items-center justify-content-center\">\r\n    </span>\r\n  </button>\r\n  <ngx-navbar-collapse id=\"main-nav\" #collapse=\"ngxNavbarCollapse\">\r\n    <ul class=\"navbar-nav mr-auto\" *ngIf=\"_userService.isLoggedIn()\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/']\" [routerLinkActive]=\"['active']\"\r\n          [routerLinkActiveOptions]=\"{exact: true}\">Home<span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/profile']\" [routerLinkActive]=\"['active']\">Profile</a>\r\n      </li>\r\n    </ul>\r\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"_userService.isLoggedIn()\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" (click)=\"onLogOutClicked()\" [routerLink]=\"['/']\" [routerLinkActive]=\"['active']\">LogOut</a>\r\n      </li>\r\n    </ul>\r\n    <ul class=\"navbar-nav mr-auto\" *ngIf=\"!_userService.isLoggedIn()\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/login']\" [routerLinkActive]=\"['active']\">SignIn<span\r\n            class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/register']\" [routerLinkActive]=\"['active']\">SignUp</a>\r\n      </li>\r\n    </ul>\r\n  </ngx-navbar-collapse>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../../services/user.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  email: string;\r\n  password: string;\r\n\r\n  constructor(\r\n    private _userService: UserService,\r\n    private _router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onSubmit() {\r\n    if (!this.email) {\r\n      this.toastr.error(\"Email can't be empty\");\r\n      return false;\r\n    }\r\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.email)) {\r\n      this.toastr.error('Please write correct email');\r\n      return false;\r\n    }\r\n    if (!this.password) {\r\n      this.toastr.error(\"Password can't be empty\");\r\n      return false;\r\n    }\r\n    if (this.password.length < 8) {\r\n      this.toastr.error(\"Password can't be less than 8 char\");\r\n      return false;\r\n    }\r\n\r\n    const user = {\r\n      email: this.email,\r\n      password: this.password,\r\n    };\r\n\r\n    this._userService.signIn(user).subscribe(\r\n      (resp) => {\r\n        this._userService.saveUser(resp.data.token, resp.data.id);\r\n        this.toastr.success('User logged in successfully');\r\n        window.location.href = '/';\r\n      },\r\n      (err) => {\r\n        this.toastr.error(err.error.msg);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container m-auto\" style=\"width: 45%;\">\r\n    <form (submit)=\"onSubmit()\">\r\n        <div class=\"form-row\">\r\n            <div class=\"form-group col-md-12\">\r\n                <label for=\"inputEmail\">Email</label>\r\n                <input type=\"email\" class=\"form-control\" id=\"inputEmail\" [(ngModel)]=\"email\" name=\"email\"\r\n                    placeholder=\"Email\">\r\n            </div>\r\n        </div>\r\n        <div class=\"form-row\">\r\n            <div class=\"form-group col-md-12\">\r\n                <label for=\"inputPassword\">Password</label>\r\n                <input type=\"password\" class=\"form-control\" id=\"inputPassword\" [(ngModel)]=\"password\" name=\"password\"\r\n                    placeholder=\"Password\">\r\n                <!-- <a [routerLink]=\"['/forget-password']\">Forget password?</a> -->\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-3\">\r\n                <button type=\"submit\" class=\"btn btn-primary\">Sign In</button>\r\n            </div>\r\n            <div class=\"col-2\">\r\n                <h4 class=\"pt-2\">Or</h4>\r\n            </div>\r\n            <div class=\"col-5\">\r\n                <button [routerLink]=\"['/register']\" class=\"btn btn-primary\">Sign Up</button>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </form>\r\n</div>","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../../services/user.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { DatePipe } from '@angular/common';\r\nimport { User } from '../../models/User';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css'],\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  constructor(\r\n    private _userService: UserService,\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: ToastrService,\r\n    private modalService: BsModalService,\r\n    private datePipe: DatePipe\r\n  ) {}\r\n\r\n  typeVolunteer = 'volunteer';\r\n  typeOwner = 'owner';\r\n  modalRef: BsModalRef;\r\n  user: User;\r\n  oldPassword: string;\r\n  newPassword: string;\r\n  confirmNewPassword: string;\r\n  phoneNumberVerificationToken: string;\r\n  loaded: boolean;\r\n\r\n  ngOnInit(): void {\r\n    this.loaded = false;\r\n    this.spinner.show();\r\n\r\n    this._userService.getProfile().subscribe((res) => {\r\n      res.data.birthdate = this.datePipe.transform(\r\n        res.data.birthdate,\r\n        'yyyy-MM-dd'\r\n      );\r\n\r\n      this.user = res.data;\r\n\r\n      setTimeout(() => {\r\n        this.loaded = true;\r\n        this.spinner.hide();\r\n      }, 1000);\r\n    },\r\n    (err) => {\r\n      this.toastr.error(err.error.msg);\r\n    });\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template);\r\n  }\r\n\r\n  updateUserProfile() {\r\n    if (!this.user.name.firstName) {\r\n      this.toastr.error(\"First name can't be empty\");\r\n      return false;\r\n    }\r\n\r\n    if (!this.user.name.lastName) {\r\n      this.toastr.error(\"Last name can't be empty\");\r\n      return false;\r\n    }\r\n\r\n    if (!this.user.gender) {\r\n      this.toastr.error(\"Gender can't be empty\");\r\n      return false;\r\n    }\r\n\r\n    if (!this.user.birthdate) {\r\n      this.toastr.error(\"Birthdate can't be empty\");\r\n      return false;\r\n    }\r\n\r\n    this.modalRef.hide();\r\n\r\n    const updatedUser = {\r\n      name: {\r\n        firstName: this.user.name.firstName,\r\n        lastName: this.user.name.lastName,\r\n      },\r\n      address: {\r\n        floor: this.user.address.floor ? this.user.address.floor : undefined,\r\n        apartmentNumber: this.user.address.apartmentNumber\r\n          ? this.user.address.apartmentNumber\r\n          : undefined,\r\n        buildingNumber: this.user.address.buildingNumber\r\n          ? this.user.address.buildingNumber\r\n          : undefined,\r\n        streetName: this.user.address.streetName\r\n          ? this.user.address.streetName\r\n          : undefined,\r\n        district: this.user.address.district\r\n          ? this.user.address.district\r\n          : undefined,\r\n        city: this.user.address.city ? this.user.address.city : undefined,\r\n        country: this.user.address.country\r\n          ? this.user.address.country\r\n          : undefined,\r\n      },\r\n      gender: this.user.gender,\r\n      birthdate: this.user.birthdate,\r\n    };\r\n\r\n    this._userService.updateUser(updatedUser).subscribe(\r\n      (res) => {\r\n        res.data.birthdate = this.datePipe.transform(\r\n          res.data.birthdate,\r\n          'yyyy-MM-dd'\r\n        );\r\n        this.user = res.data;\r\n        this.toastr.success('User updated successfully');\r\n      },\r\n      (err) => {\r\n        this.toastr.error(err.error.msg);\r\n      }\r\n    );\r\n  }\r\n\r\n  updateUserPassword() {\r\n    if (!this.oldPassword) {\r\n      this.toastr.error(\"Old password can't be empty\");\r\n      return false;\r\n    }\r\n    if (!this.newPassword) {\r\n      this.toastr.error(\"new password can't be empty\");\r\n      return false;\r\n    }\r\n    if (!this.confirmNewPassword) {\r\n      this.toastr.error(\"Confirm new password can't be empty\");\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      this.confirmNewPassword.length < 8 ||\r\n      this.oldPassword.length < 8 ||\r\n      this.newPassword.length < 8\r\n    ) {\r\n      this.toastr.error(\"Passwords length can't be less than 8\");\r\n      return false;\r\n    }\r\n\r\n    if (this.newPassword != this.confirmNewPassword) {\r\n      this.toastr.error(\"New password doesn't match with confirm new password\");\r\n      return false;\r\n    }\r\n\r\n    const passwordObj = {\r\n      oldPassword: this.oldPassword,\r\n      newPassword: this.newPassword,\r\n    };\r\n    this._userService.updatePasswod(passwordObj).subscribe(\r\n      (res) => {\r\n        this.modalRef.hide();\r\n        this.toastr.success('Password updated successfully');\r\n      },\r\n      (err) => {\r\n        this.toastr.error(err.error.msg);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loaded\">\r\n    <div class=\"card text-center\">\r\n        <div class=\"card-header\">\r\n            {{user?.name?.firstName}} {{user?.name?.lastName}}\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <img src=\"https://cyyann.s3.amazonaws.com/{{user?.photo}}\" width=\"120px\" class=\"mt-3 mb-3\"\r\n                style=\"border-radius: 50%;\" alt=\"Profile Image\">\r\n            <p class=\"card-text\">Email: {{user?.email?.value}}</p>\r\n            <p class=\"card-text\">Gender: {{user?.gender}}</p>\r\n            <p class=\"card-text\">Birthdate: {{user?.birthdate | date}}</p>\r\n            <p class=\"card-text\" *ngIf=\"user?.address\">Address: {{user?.address.country}}, {{user?.address.city}},\r\n                {{user?.address.district}}, {{user?.address.streetName}},\r\n                {{user?.address.buildingNumber}}, {{user?.address.floor}}, {{user?.address.apartmentNumber}}\r\n            </p>\r\n            <button (click)=\"openModal(updateProfile)\" class=\"btn btn-primary mr-2\">Edit profile</button>\r\n            <!-- <button (click)=\"openModal(addPhoneNumber)\" *ngIf=\"!user?.phoneNumber\" class=\"btn btn-primary mr-2\">Add\r\n                phone\r\n                number</button> -->\r\n\r\n            <!-- <button (click)=\"openModal(verifyPhoneNumber)\" *ngIf=\" user?.phoneNumber && !user?.phoneNumber?.isVerified\"\r\n                class=\"btn btn-success mr-2\">Confirm\r\n                phone number</button> -->\r\n\r\n            <button (click)=\"openModal(updatePassword)\" class=\"btn btn-primary mr-2\">Update password</button>\r\n        </div>\r\n        <div class=\"card-footer text-muted\">\r\n            Joined {{user?.createdAt | date}}\r\n        </div>\r\n    </div>\r\n    <div class=\"row mt-3 mb-3\" *ngIf=\"user?._id\">\r\n        <div class=\"col\">\r\n            <tabset type=\"pills\" [justified]=\"true\">\r\n                <tab heading=\"Owned shopping lists\">\r\n                    <app-shopping-lists [id]=\"user?._id\" [type]='typeOwner'></app-shopping-lists>\r\n                </tab>\r\n                <tab heading=\"Volunteered shopping lists\">\r\n                    <app-shopping-lists [id]=\"user?._id\" [type]='typeVolunteer'></app-shopping-lists>\r\n                </tab>\r\n            </tabset>\r\n        </div>\r\n    </div>\r\n</ng-container>\r\n\r\n\r\n\r\n<ng-template #updateProfile>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title pull-left\">Update profile</h4>\r\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\" style=\"max-height: 400px; overflow-y: scroll;\">\r\n        <form (submit)=\"updateUserProfile()\">\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"inputFirstName\">First name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"inputFirstName\" [(ngModel)]=\"user.name.firstName\"\r\n                        name=\"firstName\" placeholder=\"First name\" required>\r\n                </div>\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"inputLastName\">Last name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"inputLastName\" [(ngModel)]=\"user.name.lastName\"\r\n                        name=\"lastName\" placeholder=\"Last name\" required>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"inputGender\">Gender</label>\r\n                    <select id=\"inputGender\" [(ngModel)]=\"user.gender\" name=\"gender\" class=\"form-control\" required>\r\n                        <option selected value=\"Male\">Male</option>\r\n                        <option value=\"Female\">Female</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"inputBirthdate\">Birthdate</label>\r\n                    <input type=\"date\" class=\"form-control\" id=\"inputBirthdate\" [(ngModel)]=\"user.birthdate\"\r\n                        name=\"birthdate\" placeholder=\"birthdate\" required>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"inputCountry\">Country</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"inputCountry\" name=\"country\"\r\n                        [(ngModel)]=\"user.address.country\">\r\n                </div>\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"inputCity\">City</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"inputCity\" name=\"city\" [(ngModel)]=\"user.address.city\">\r\n                </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"inputDistrict\">District</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"inputDistrict\" name=\"district\"\r\n                        [(ngModel)]=\"user.address.district\">\r\n                </div>\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"inputStreetName\">Street Name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"inputStreetName\" name=\"streetName\"\r\n                        [(ngModel)]=\"user.address.streetName\">\r\n                </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"inputBuildingNumber\">Building Number</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"inputBuildingNumber\" name=\"buildingNumber\"\r\n                        [(ngModel)]=\"user.address.buildingNumber\">\r\n                </div>\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"inputFloor\">Floor</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"inputFloor\" [(ngModel)]=\"user.address.floor\"\r\n                        name=\"floor\">\r\n                </div>\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"inputApartmentNumber\">Apartment Number</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"inputApartmentNumber\" name=\"apartmentNumber\"\r\n                        [(ngModel)]=\"user.address.apartmentNumber\">\r\n                </div>\r\n\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\">Update</button>\r\n        </form>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #updatePassword>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title pull-left\">Update password</h4>\r\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\" style=\"max-height: 400px; overflow-y: scroll;\">\r\n        <form (submit)=\"updateUserPassword()\">\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-12\">\r\n                    <label for=\"inputOldPassword\">Old password</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"inputOldPassword\" [(ngModel)]=\"oldPassword\"\r\n                        name=\"oldPassword\" placeholder=\"Old password\" required>\r\n                </div>\r\n                <div class=\"form-group col-md-12\">\r\n                    <label for=\"inputPassword\">New password</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"inputPassword\" [(ngModel)]=\"newPassword\"\r\n                        name=\"password\" placeholder=\"New password\" required>\r\n                </div>\r\n                <div class=\"form-group col-md-12\">\r\n                    <label for=\"inputConfirmPassword\">Confirm new password</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"inputConfirmPassword\"\r\n                        [(ngModel)]=\"confirmNewPassword\" name=\"confirmPassword\" placeholder=\"Confirm New password\"\r\n                        required>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <button type=\"submit\" class=\"btn btn-primary\">Sign Up</button>\r\n        </form>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<!-- <ng-template #addPhoneNumber>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title pull-left\">Add phone number</h4>\r\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\" style=\"max-height: 400px; overflow-y: scroll;\">\r\n        <form action=\"\">\r\n\r\n        </form>\r\n    </div>\r\n</ng-template> -->\r\n\r\n\r\n\r\n<!-- <ng-template #verifyPhoneNumber>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title pull-left\">Add phone number</h4>\r\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\" style=\"max-height: 400px; overflow-y: scroll;\">\r\n        <form (submit)=\"verifyUserPhoneNumber()\">\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"inputPhoneNumberVerificationToken\">Phone number verification code</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"inputPhoneNumberVerificationToken\"\r\n                        [(ngModel)]=\"phoneNumberVerificationToken\" name=\"phoneNumberVerificationToken\"\r\n                        placeholder=\"Phone number verification code\" required>\r\n                </div>\r\n            </div>\r\n\r\n            <button type=\"submit\" class=\"btn btn-primary\">Sign Up</button>\r\n        </form>\r\n    </div>\r\n</ng-template> -->","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../../services/user.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password: string;\r\n  birthdate: Date;\r\n  gender: string;\r\n\r\n  constructor(\r\n    private _userService: UserService,\r\n    private _router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.gender = 'Male';\r\n  }\r\n\r\n  onSubmit() {\r\n    if (!this.firstName) {\r\n      this.toastr.error(\"First name can't be empty\");\r\n      return false;\r\n    }\r\n    if (!this.lastName) {\r\n      this.toastr.error(\"Last name can't be empty\");\r\n      return false;\r\n    }\r\n    if (!this.email) {\r\n      this.toastr.error(\"Email can't be empty\");\r\n      return false;\r\n    }\r\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.email)) {\r\n      this.toastr.error('Please write correct email');\r\n      return false;\r\n    }\r\n    if (!this.password) {\r\n      this.toastr.error(\"Password can't be empty\");\r\n      return false;\r\n    }\r\n    if (this.password.length < 8) {\r\n      this.toastr.error(\"Password can't be less than 8 char\");\r\n      return false;\r\n    }\r\n    if (!this.gender) {\r\n      this.toastr.error(\"Gender can't be empty\");\r\n      return false;\r\n    }\r\n    if (!this.birthdate) {\r\n      this.toastr.error(\"Birthdate can't be empty\");\r\n      return false;\r\n    }\r\n\r\n    const user = {\r\n      name: {\r\n        firstName: this.firstName,\r\n        lastName: this.lastName,\r\n      },\r\n      email: this.email,\r\n      password: this.password,\r\n      birthdate: this.birthdate,\r\n      gender: this.gender,\r\n    };\r\n\r\n    this._userService.signUp(user).subscribe((res) => {\r\n      this.toastr.success('User created successfully');\r\n\r\n      this._router.navigate(['/login']);\r\n    },\r\n    (err) => {\r\n      this.toastr.error(err.error.msg);\r\n    });\r\n  }\r\n}\r\n","<form (submit)=\"onSubmit()\">\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col-md-6\">\r\n      <label for=\"inputFirstName\">First name</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"inputFirstName\" [(ngModel)]=\"firstName\" name=\"firstName\"\r\n        placeholder=\"First name\" required>\r\n    </div>\r\n    <div class=\"form-group col-md-6\">\r\n      <label for=\"inputLastName\">Last name</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"inputLastName\" [(ngModel)]=\"lastName\" name=\"lastName\"\r\n        placeholder=\"Last name\" required>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col-md-6\">\r\n      <label for=\"inputEmail\">Email</label>\r\n      <input type=\"email\" class=\"form-control\" id=\"inputEmail\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"Email\"\r\n        required>\r\n    </div>\r\n    <div class=\"form-group col-md-6\">\r\n      <label for=\"inputPassword\">Password</label>\r\n      <input type=\"password\" class=\"form-control\" id=\"inputPassword\" [(ngModel)]=\"password\"\r\n        name=\"password\" placeholder=\"Password\" required>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col-md-6\">\r\n      <label for=\"inputGender\">Gender</label>\r\n      <select id=\"inputGender\" [(ngModel)]=\"gender\" name=\"gender\" class=\"form-control\" required>\r\n        <option selected value=\"Male\">Male</option>\r\n        <option value=\"Female\">Female</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"form-group col-md-6\">\r\n      <label for=\"inputBirthdate\">Birthdate</label>\r\n      <input type=\"date\" class=\"form-control\" id=\"inputBirthdate\" [(ngModel)]=\"birthdate\" name=\"birthdate\"\r\n        placeholder=\"birthdate\" required>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <div class=\"form-check\">\r\n      <input class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" required>\r\n      <label class=\"form-check-label\" for=\"gridCheck\">\r\n        I accept the terms of service.\r\n      </label>\r\n    </div>\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary\">Sign Up</button>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css'],\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  password: string;\r\n  confirmPassword: string;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onSubmit() {\r\n  }\r\n}\r\n","<div class=\"container m-auto\" style=\"width: 45%;\">\r\n    <form (submit)=\"onSubmit()\">\r\n\r\n        <div class=\"form-row\">\r\n            <div class=\"form-group col-md-12\">\r\n                <label for=\"inputPassword\">Password</label>\r\n                <input type=\"password\" class=\"form-control\" id=\"inputPassword\" [(ngModel)]=\"password\" name=\"password\"\r\n                    placeholder=\"Password\">\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-row\">\r\n            <div class=\"form-group col-md-12\">\r\n                <label for=\"inputConfirmPassword\">Confirm Password</label>\r\n                <input type=\"password\" class=\"form-control\" id=\"inputConfirmPassword\" [(ngModel)]=\"confirmPassword\"\r\n                    name=\"confirmPassword\" placeholder=\"Confirm Password\">\r\n            </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn btn-primary\">Reset Password</button>\r\n    </form>\r\n</div>","import {\r\n  Component,\r\n  OnInit,\r\n  EventEmitter,\r\n  Output,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { FormArray, FormGroup, FormControl, FormBuilder } from '@angular/forms';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { faTrash, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-add-shopping-list',\r\n  templateUrl: './add-shopping-list.component.html',\r\n  styleUrls: ['./add-shopping-list.component.css'],\r\n})\r\nexport class AddShoppingListComponent implements OnInit {\r\n  constructor(\r\n    private modalService: BsModalService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  faTrash = faTrash;\r\n  faPlus = faPlus;\r\n  itemName: string;\r\n  quantity: string;\r\n  notes: string;\r\n  modalRef: BsModalRef;\r\n  items: FormArray;\r\n  shoppingList: FormGroup;\r\n\r\n  @Output() addShoppingList: EventEmitter<any> = new EventEmitter();\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n\r\n  initForm() {\r\n    this.shoppingList = new FormGroup({\r\n      notes: new FormControl(''),\r\n      items: new FormArray([\r\n        new FormGroup({\r\n          itemName: new FormControl(''),\r\n          quantity: new FormControl(''),\r\n        }),\r\n      ]),\r\n    });\r\n\r\n    this.items = this.shoppingList.get('items') as FormArray;\r\n  }\r\n\r\n  addNewRow() {\r\n    this.items.push(\r\n      new FormGroup({\r\n        itemName: new FormControl(''),\r\n        quantity: new FormControl(''),\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteRow(index: number) {\r\n    this.items.removeAt(index);\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template);\r\n  }\r\n\r\n  onSubmit() {\r\n    for (let i = 0; i < this.shoppingList.get('items').value.length; i++) {\r\n      let element = this.shoppingList.get('items').value[i];\r\n      if (element.itemName.length < 1) {\r\n        this.toastr.error(\"Item name can't be empty\");\r\n        return;\r\n      }\r\n\r\n      if (element.quantity.length < 1) {\r\n        this.toastr.error(\"Quantity can't be empty\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (this.shoppingList.get('notes').value.length < 1) {\r\n      this.toastr.error(\"Notes can't be empty\");\r\n      return;\r\n    }\r\n\r\n    const shoppingList = {\r\n      items: this.shoppingList.get('items').value,\r\n      notes: this.shoppingList.get('notes').value,\r\n    };\r\n\r\n    this.modalRef.hide();\r\n\r\n    this.initForm();\r\n\r\n    this.addShoppingList.emit(shoppingList);\r\n  }\r\n}\r\n","\r\n<button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(template)\">New shopping list</button>\r\n\r\n\r\n<ng-template #template>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Add shopping list</h4>\r\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\" style=\"max-height: 400px; overflow-y: scroll;\">\r\n    <form [formGroup]=\"shoppingList\" (submit)=\"onSubmit()\">\r\n      <ng-container formArrayName=\"items\" *ngFor=\"let _ of items.controls; index as i\">\r\n        <ng-container [formGroupName]=\"i\">\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group col-md-5\">\r\n              <label for=\"inputItemName\">Item Name</label>\r\n              <input type=\"text\" formControlName=\"itemName\" class=\"form-control\" id=\"inputItemName\"\r\n                placeholder=\"Item name\">\r\n            </div>\r\n            <div class=\"form-group col-md-5\">\r\n              <label for=\"inputQuantity\">Quantity</label>\r\n              <input type=\"number\" formControlName=\"quantity\" class=\"form-control\" id=\"inputQuantity\"\r\n                placeholder=\"Quantity\">\r\n            </div>\r\n            <div class=\"form-group col-md-1\" style=\"margin-top: 2rem; padding-left: 0;\">\r\n              <button (click)=\"deleteRow(i)\" class=\"btn btn-danger\">\r\n                <fa-icon [icon]=\"faTrash\"></fa-icon>\r\n              </button>\r\n            </div>\r\n            <div class=\"form-group col-md-1\" style=\"margin-top: 2rem;\">\r\n              <button *ngIf=\"items.controls.length - 1 == i\" type=\"button\" (click)=\"addNewRow()\"\r\n                class=\"btn btn-primary\">\r\n                <fa-icon [icon]=\"faPlus\"></fa-icon>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n        </ng-container>\r\n      </ng-container>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"inputNotes\">Notes</label>\r\n        <textarea type=\"text\" class=\"form-control\" id=\"inputNotes\" placeholder=\"Notes\" formControlName=\"notes\">\r\n          </textarea>\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"btn btn-success btn-lg btn-block\">Add</button>\r\n\r\n    </form>\r\n  </div>\r\n</ng-template>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport {\r\n  faTrash,\r\n  faPlus,\r\n  faShoppingCart,\r\n  faEraser\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-shopping-list',\r\n  templateUrl: './shopping-list.component.html',\r\n  styleUrls: ['./shopping-list.component.css'],\r\n})\r\nexport class ShoppingListComponent implements OnInit {\r\n  @Input() shoppingList: any;\r\n  @Input() userId: any;\r\n\r\n  @Output() deleteShoppingList: EventEmitter<any> = new EventEmitter();\r\n  @Output() buyShoppingList: EventEmitter<any> = new EventEmitter();\r\n  @Output() unBuyShoppingList: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor() {}\r\n  \r\n  faTrash = faTrash;\r\n  faPlus = faPlus;\r\n  faShoppingCart = faShoppingCart;\r\n  faEraser = faEraser;\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onDelete(id) {\r\n    this.deleteShoppingList.emit(id);\r\n  }\r\n\r\n  onBuy(id) {\r\n    this.buyShoppingList.emit(id);\r\n  }\r\n\r\n  onUnBuy(id) {\r\n    this.unBuyShoppingList.emit(id);\r\n  }\r\n}\r\n","<div class=\"col-md-auto\">\r\n    <div class=\"card text-dark mb-3\" style=\"width: 310px; height:300px; overflow-y: scroll;\">\r\n        <div class=\"card-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-2\">\r\n                    <img src=\"https://cyyann.s3.amazonaws.com/{{shoppingList?.owner?.photo}}\" width=\"35px\"\r\n                        class=\"mt-3 mb-3\" style=\"border-radius: 50%;\" alt=\"Profile Image\">\r\n                </div>\r\n                <div class=\"col-md-8 pt-3\">\r\n                    <a routerLink=\"/profile/{{shoppingList?.owner?._id}}\">\r\n                        {{shoppingList.owner.name.firstName}} {{shoppingList.owner.name.lastName}}\r\n                    </a>\r\n                </div>\r\n                <div class=\"col-md-2 pt-2\" *ngIf=\"shoppingList?.owner?._id == userId\">\r\n                    <button (click)=\"onDelete(shoppingList?._id)\" class=\"btn btn-danger m-auto float-right\">\r\n                        <fa-icon [icon]=\"faTrash\"></fa-icon>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <ul class=\"list-group\">\r\n                <li class=\"text-dark list-group-item d-flex justify-content-between align-items-center\"\r\n                    *ngFor=\"let item of shoppingList?.items;\">\r\n                    {{item.itemName}}\r\n                    <span class=\"badge badge-primary badge-pill\">{{item.quantity}}</span>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"row mt-3\">\r\n                <div class=\"col-12\" *ngIf=\"!shoppingList?.volunteer && shoppingList?.owner._id != userId\">\r\n                    <button (click)=\"onBuy(shoppingList?._id)\" class=\"btn btn-primary btn-block\">\r\n                        volunteer <fa-icon [icon]=\"faShoppingCart\"></fa-icon>\r\n                    </button>\r\n                </div>\r\n                <div class=\"col-12 text-center\" *ngIf=\"!shoppingList?.volunteer && shoppingList?.owner._id == userId\">\r\n                    No one has volunteered yet\r\n                </div>\r\n                <div class=\"col-12 text-center\"\r\n                    *ngIf=\"shoppingList?.volunteer && shoppingList?.volunteer?._id != userId\">\r\n                    <a routerLink=\"/profile/{{shoppingList?.volunteer?._id}}\">\r\n                        {{shoppingList.volunteer.name.firstName}} {{shoppingList.volunteer.name.lastName}}\r\n                    </a>\r\n                    volunteered\r\n                </div>\r\n                <div class=\"col-12\" *ngIf=\"shoppingList?.volunteer && shoppingList?.volunteer?._id == userId\">\r\n                    <button (click)=\"onUnBuy(shoppingList?._id)\" class=\"btn btn-danger btn-block\">\r\n                        revoke volunteering <fa-icon [icon]=\"faEraser\"></fa-icon>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"card-footer text-muted\">\r\n            <p class=\"card-text\">Note: {{shoppingList.notes}}</p>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- <button (click)=\"onDelete(shoppingList._id)\" class=\"btn-danger\">X</button> -->","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ShoppingListService } from '../../services/shopping-list.service';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { UserService } from '../../services/user.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-shopping-lists',\r\n  templateUrl: './shopping-lists.component.html',\r\n  styleUrls: ['./shopping-lists.component.css'],\r\n})\r\nexport class ShoppingListsComponent implements OnInit {\r\n  constructor(\r\n    private _shoppingListService: ShoppingListService,\r\n    private _userService: UserService,\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  shoppingLists: any[];\r\n  currentShoppingLists: any[];\r\n  currentPage: number;\r\n  userId: string;\r\n  loaded: boolean;\r\n\r\n  @Input() id;\r\n  @Input() type;\r\n\r\n  pageChanged(event: PageChangedEvent): void {\r\n    this.currentPage = event.page;\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.currentShoppingLists = this.shoppingLists.slice(startItem, endItem);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loaded = false;\r\n    this.spinner.show();\r\n    this.currentPage = 1;\r\n    this.userId = this._userService.getId();\r\n    this.getAll();\r\n  }\r\n\r\n  getAll(): any {\r\n    if (this.type) {\r\n      if (this.type == 'owner') {\r\n        this._shoppingListService.getOwner(this.id).subscribe((res) => {\r\n          if (res.data.shoppingLists) {\r\n            this.shoppingLists = res.data.shoppingLists;\r\n            this.updateSubArray();\r\n            setTimeout(() => {\r\n              this.spinner.hide();\r\n              this.loaded = true;\r\n            }, 1000);\r\n          }\r\n        },\r\n        (err) => {\r\n          this.toastr.error(err.error.msg);\r\n        });\r\n      } else if (this.type == 'volunteer') {\r\n        this._shoppingListService.getVolunteer(this.id).subscribe((res) => {\r\n          if (res.data.shoppingLists) {\r\n            this.shoppingLists = res.data.shoppingLists;\r\n            this.updateSubArray();\r\n            setTimeout(() => {\r\n              this.spinner.hide();\r\n              this.loaded = true;\r\n            }, 1000);\r\n          }\r\n        },\r\n        (err) => {\r\n          this.toastr.error(err.error.msg);\r\n        });\r\n      }\r\n    } else {\r\n      this._shoppingListService.getAll().subscribe((res) => {\r\n        if (res.data.shoppingLists) {\r\n          this.shoppingLists = res.data.shoppingLists;\r\n          this.updateSubArray();\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n            this.loaded = true;\r\n          }, 1000);\r\n        }\r\n      },\r\n      (err) => {\r\n        this.toastr.error(err.error.msg);\r\n      });\r\n    }\r\n  }\r\n\r\n  updateSubArray(): void {\r\n    const startItem = (this.currentPage - 1) * 3;\r\n    const endItem = this.currentPage * 3;\r\n    this.currentShoppingLists = this.shoppingLists.slice(startItem, endItem);\r\n  }\r\n\r\n  deleteShoppingList(id: string) {\r\n    this.shoppingLists = this.shoppingLists.filter((sl) => sl._id !== id);\r\n\r\n    this.updateSubArray();\r\n\r\n    this._shoppingListService.deleteShoppingList(id).subscribe((res) => {\r\n      this.toastr.success('Shopping list deleted succesfully!');\r\n\r\n    },\r\n      (err) => {\r\n        this.toastr.error(err.error.msg);\r\n      });\r\n  }\r\n\r\n  addShoppingList(shoppingList: any) {\r\n    this._shoppingListService.create(shoppingList).subscribe((res) => {\r\n      this.shoppingLists.unshift(res.data.shoppingList);\r\n      this.updateSubArray();\r\n      this.toastr.success('Shopping list created succesfully!');\r\n    },\r\n    (err) => {\r\n      this.toastr.error(err.error.msg);\r\n    });\r\n  }\r\n\r\n  buyShoppingList(id) {\r\n    this._shoppingListService.buy(id).subscribe((res) => {\r\n      for (let i = 0; i < this.shoppingLists.length; i++) {\r\n        if (this.shoppingLists[i]._id == id) {\r\n          this.shoppingLists[i] = res.data.shoppingList;\r\n          break;\r\n        }\r\n      }\r\n      this.updateSubArray();\r\n      this.toastr.success('You have successfully volunteered!');\r\n    },\r\n    (err) => {\r\n      this.toastr.error(err.error.msg);\r\n    });\r\n  }\r\n\r\n  unBuyShoppingList(id) {\r\n    this._shoppingListService.unBuy(id).subscribe((res) => {\r\n      for (let i = 0; i < this.shoppingLists.length; i++) {\r\n        if (this.shoppingLists[i]._id == id) {\r\n          if (this.type && this.type == 'volunteer') {\r\n            this.shoppingLists.splice(i, 1);\r\n          } else {\r\n            this.shoppingLists[i] = res.data.shoppingList;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n      this.updateSubArray();\r\n      this.toastr.success('You have successfully revoked volunteering!');\r\n    },\r\n    (err) => {\r\n      this.toastr.error(err.error.msg);\r\n    });\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loaded\">\r\n    <div class=\"row mt-3\" *ngIf=\"!type\">\r\n        <div class=\"col\">\r\n            <app-add-shopping-list (addShoppingList)=\"addShoppingList($event)\"></app-add-shopping-list>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row mt-3\">\r\n        <app-shopping-list *ngFor=\"let shoppingList of currentShoppingLists\" [shoppingList]=\"shoppingList\"\r\n            [userId]=\"userId\" (deleteShoppingList)=\"deleteShoppingList($event)\"\r\n            (buyShoppingList)=\"buyShoppingList($event)\" (unBuyShoppingList)=\"unBuyShoppingList($event)\">\r\n        </app-shopping-list>\r\n        <div class=\"col mt-5\" *ngIf=\"currentShoppingLists?.length == 0\">\r\n            <h4 class=\"d-flex justify-content-center\">No shopping lists avilable</h4>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row mt-5\">\r\n        <div class=\"col\">\r\n            <pagination class=\"d-flex justify-content-center\" [totalItems]=\"shoppingLists?.length\" [itemsPerPage]=\"3\"\r\n                (pageChanged)=\"pageChanged($event)\">\r\n            </pagination>\r\n        </div>\r\n    </div>\r\n</ng-container>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserService } from '../../services/user.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css'],\r\n})\r\nexport class UserComponent implements OnInit {\r\n  constructor(\r\n    private _userService: UserService,\r\n    private _router: Router,\r\n    private route: ActivatedRoute,\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  user: any;\r\n  id: string;\r\n  typeVolunteer = 'volunteer';\r\n  typeOwner = 'owner';\r\n\r\n  loaded: boolean;\r\n\r\n  getId() {\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loaded = false;\r\n    this.spinner.show();\r\n\r\n    this.getId();\r\n\r\n    if (this._userService.getId() === this.id) {\r\n      this._router.navigate(['/profile']);\r\n    }\r\n\r\n    this._userService.getUser(this.id).subscribe((res) => {\r\n      this.user = res.data;\r\n\r\n      setTimeout(() => {\r\n        this.loaded = true;\r\n        this.spinner.hide();\r\n      }, 1000);\r\n    },\r\n    (err) => {\r\n      this.toastr.error(err.error.msg);\r\n    });\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loaded\">\r\n    <div class=\"card text-center\">\r\n        <div class=\"card-header\">\r\n            {{user?.name?.firstName}} {{user?.name?.lastName}}\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <img src=\"https://cyyann.s3.amazonaws.com/{{user?.photo}}\" width=\"120px\" class=\"mt-3 mb-3\"\r\n                style=\"border-radius: 50%;\" alt=\"Profile Image\">\r\n            <p class=\"card-text\">Email: {{user?.email?.value}}</p>\r\n            <p class=\"card-text\">Gender: {{user?.gender}}</p>\r\n            <p class=\"card-text\">Birthdate: {{user?.birthdate | date}}</p>\r\n            <!-- <a href=\"#\" class=\"btn btn-primary\">Edit profile</a> -->\r\n        </div>\r\n        <div class=\"card-footer text-muted\">\r\n            Joined {{user?.createdAt | date}}\r\n        </div>\r\n    </div>\r\n    <div class=\"row mt-3 mb-3\" *ngIf=\"user?._id\">\r\n        <div class=\"col\">\r\n            <tabset type=\"pills\" [justified]=\"true\">\r\n                <tab heading=\"Owned shopping lists\">\r\n                    <app-shopping-lists [id]=\"user?._id\" [type]='typeOwner'></app-shopping-lists>\r\n                </tab>\r\n                <tab heading=\"Volunteered shopping lists\">\r\n                    <app-shopping-lists [id]=\"user?._id\" [type]='typeVolunteer'></app-shopping-lists>\r\n                </tab>\r\n            </tabset>\r\n        </div>\r\n    </div>\r\n</ng-container>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../../services/user.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-verify-email',\r\n  templateUrl: './verify-email.component.html',\r\n  styleUrls: ['./verify-email.component.css'],\r\n})\r\nexport class VerifyEmailComponent implements OnInit {\r\n  constructor(\r\n    private _userService: UserService,\r\n    private _router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  emailVerificationToken: string;\r\n\r\n  ngOnInit(): void {\r\n    this.emailVerificationToken = this.route.snapshot.paramMap.get(\r\n      'emailVerificationToken'\r\n    );\r\n\r\n    this._userService\r\n      .verifyEmail({ emailVerificationToken: this.emailVerificationToken })\r\n      .subscribe(\r\n        (resp) => {\r\n          if (!resp.success) {\r\n            // this._flash.show(resp.message, { cssClass: 'alert-danger' });\r\n            return false;\r\n          }\r\n          this._router.navigate(['/']);\r\n        },\r\n        (err) => {\r\n          this.toastr.error(err.error.msg);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<p>verify-email works!</p>\r\n","export const URL = 'http://localhost:3000';\r\nexport const AUTH_TOKEN = 'Authentication';\r\nexport const USER_ID = 'UserId';\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  Router,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from '../services/user.service';\r\nimport * as config from '../configurations';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthenticatedGuard implements CanActivate {\r\n  constructor(private _router: Router, private _userService: UserService) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    if (this._userService.isLoggedIn()) {\r\n      return true;\r\n    } else {\r\n      this._router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  Router,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from '../services/user.service';\r\nimport * as config from '../configurations';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UnauthenticatedGuard implements CanActivate {\r\n  constructor(private _router: Router, private _userService: UserService) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    if (!this._userService.isLoggedIn()) {\r\n      return true;\r\n    } else {\r\n      this._router.navigate(['/']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport * as config from '../configurations';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ShoppingListService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  create(createObj: any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(config.AUTH_TOKEN),\r\n      }),\r\n    };\r\n    return this.http.post<any>(\r\n      `${config.URL}/shopping-list/create`,\r\n      createObj,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  buy(id: string): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(config.AUTH_TOKEN),\r\n      }),\r\n    };\r\n\r\n    return this.http.get<any>(\r\n      `${config.URL}/shopping-list/buy/${id}`,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  unBuy(id: string): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(config.AUTH_TOKEN),\r\n      }),\r\n    };\r\n    return this.http.get<any>(\r\n      `${config.URL}/shopping-list/unBuy/${id}`,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  getAll(): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(config.AUTH_TOKEN),\r\n      }),\r\n    };\r\n\r\n    return this.http.get<any>(\r\n      `${config.URL}/shopping-list/getAll`,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  getOwner(id: string): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(config.AUTH_TOKEN),\r\n      }),\r\n    };\r\n    return this.http.get<any>(\r\n      `${config.URL}/shopping-list/getMyShoppingLists/${id}`,\r\n      httpOptions\r\n    );\r\n  }\r\n  getVolunteer(id: string): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(config.AUTH_TOKEN),\r\n      }),\r\n    };\r\n\r\n    return this.http.get<any>(\r\n      `${config.URL}/shopping-list/getMyVolunteerShoppingLists/${id}`,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  deleteShoppingList(id): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(config.AUTH_TOKEN),\r\n      }),\r\n    };\r\n    return this.http.delete<any>(\r\n      `${config.URL}/shopping-list/delete/${id}`,\r\n      httpOptions\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport * as config from '../configurations';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  itemValue = new Subject<string>();\r\n\r\n  constructor(private http: HttpClient, private _router: Router) {}\r\n\r\n  signUp(signUpObj: any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    };\r\n    return this.http.post<any>(\r\n      `${config.URL}/user/sign-up`,\r\n      signUpObj,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  signIn(signInObj: any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    };\r\n    return this.http.post<any>(\r\n      `${config.URL}/user/sign-in`,\r\n      signInObj,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  signOut() {\r\n    localStorage.removeItem(config.AUTH_TOKEN);\r\n    this.itemValue.next(\"\");\r\n    this._router.navigate(['/login']);\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return !!localStorage.getItem(config.AUTH_TOKEN);\r\n  }\r\n\r\n  getProfile() {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(config.AUTH_TOKEN),\r\n      }),\r\n    };\r\n    return this.http.get<any>(`${config.URL}/user/profile`, httpOptions);\r\n  }\r\n\r\n  getId() {\r\n    return localStorage.getItem(config.USER_ID);\r\n  }\r\n\r\n  getUser(id: string) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(config.AUTH_TOKEN),\r\n      }),\r\n    };\r\n    return this.http.get<any>(`${config.URL}/user/getUser/${id}`, httpOptions);\r\n  }\r\n\r\n  saveUser(token: string, id: string): void {\r\n    localStorage.setItem(config.AUTH_TOKEN, token);\r\n    localStorage.setItem(config.USER_ID, id);\r\n    this.itemValue.next(token);\r\n  }\r\n\r\n  verifyEmail(verifyEmailObj: any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    };\r\n    return this.http.post<any>(\r\n      `${config.URL}/user/verify-email`,\r\n      verifyEmailObj,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  forgetPassword(forgetPasswordObj: any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    };\r\n    return this.http.post<any>(\r\n      `${config.URL}/user/forget-password`,\r\n      forgetPasswordObj,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  resetPassword(resetPasswordObj: any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    };\r\n    return this.http.post<any>(\r\n      `${config.URL}/user/forget-password`,\r\n      resetPasswordObj,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  updatePasswod(updatePasswordObj: any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(config.AUTH_TOKEN),\r\n      }),\r\n    };\r\n\r\n    return this.http.patch<any>(\r\n      `${config.URL}/user/update-password`,\r\n      updatePasswordObj,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  updateUser(updateUserObj: any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(config.AUTH_TOKEN),\r\n      }),\r\n    };\r\n\r\n    return this.http.patch<any>(\r\n      `${config.URL}/user/update-profile`,\r\n      updateUserObj,\r\n      httpOptions\r\n    );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}